#!/bin/bash

# 设置系统的默认软件源
armbian_source_file="/etc/apt/sources.list"
armbian_source_backup_file="/etc/apt/sources.list.d/sources.list.bak"
armbian_list_file="/etc/apt/sources.list.d/armbian.list"
# 获取自定义固件信息
release_file="/etc/os-release"

# 设置字体颜色
STEPS="[\033[95m 步骤 \033[0m]"      # 步骤
INFO="[\033[94m 信息 \033[0m]"       # 信息
SUCCESS="[\033[92m 成功 \033[0m]"    # 成功
OPTIONS="[\033[93m 选项 \033[0m]"    # 选项
ERROR="[\033[91m 错误 \033[0m]"      # 错误
#
#===========================================================================

# 遇到严重错误时，终止脚本执行
error_msg() {
    echo -e "${ERROR} ${1}"
    exit 1
}

# 检查系统版本
check_release() {
    if [[ -f "${release_file}" ]]; then
        source "${release_file}"
        VERSION_CODEID="${ID}"
        VERSION_CODENAME="${VERSION_CODENAME}"
        [[ -z "${VERSION_CODEID}" ]] && error_msg "未检测到系统的 VERSION_CODEID！"
        [[ -z "${VERSION_CODENAME}" ]] && error_msg "未检测到系统的 VERSION_CODENAME！"
    else
        error_msg "未检测到系统的 release 文件！"
    fi
}

# 备份软件源列表
backup_source_list() {
    [[ -f "${armbian_source_file}" && ! -f "${armbian_source_backup_file}" ]] && {
        cp -f "${armbian_source_file}" "${armbian_source_backup_file}"
    }
}

# 更改系统的软件源
change_source_list() {
    echo -e "${STEPS} 开始更改系统软件源: [\033[92m ${MIRROR_URL} \033[0m]"
    echo -e "${INFO} 系统版本: [\033[92m ${VERSION_CODENAME} \033[0m]"

    case "${VERSION_CODENAME}" in
    buster)
        cat >${armbian_source_file} <<EOF
        deb http://${MIRROR_URL}/debian ${VERSION_CODENAME} main contrib non-free
        #deb-src http://${MIRROR_URL}/debian ${VERSION_CODENAME} main contrib non-free

        deb http://${MIRROR_URL}/debian ${VERSION_CODENAME}-updates main contrib non-free
        #deb-src http://${MIRROR_URL}/debian ${VERSION_CODENAME}-updates main contrib non-free

        deb http://${MIRROR_URL}/debian-security ${VERSION_CODENAME}/updates main contrib non-free
        #deb-src http://${MIRROR_URL}/debian-security ${VERSION_CODENAME}/updates main contrib non-free
EOF
        ;;

    bullseye)
        cat >${armbian_source_file} <<EOF
        deb http://${MIRROR_URL}/debian ${VERSION_CODENAME} main contrib non-free
        #deb-src http://${MIRROR_URL}/debian ${VERSION_CODENAME} main contrib non-free

        deb http://${MIRROR_URL}/debian ${VERSION_CODENAME}-updates main contrib non-free
        #deb-src http://${MIRROR_URL}/debian ${VERSION_CODENAME}-updates main contrib non-free

        deb http://${MIRROR_URL}/debian ${VERSION_CODENAME}-backports main contrib non-free
        #deb-src http://${MIRROR_URL}/debian ${VERSION_CODENAME}-backports main contrib non-free

        deb http://${MIRROR_URL}/debian-security ${VERSION_CODENAME}-security main contrib non-free
        #deb-src http://${MIRROR_URL}/debian-security ${VERSION_CODENAME}-security main contrib non-free
EOF
        ;;

    bookworm | trixie)
        # 从 bookworm 开始，非自由固件从 non-free 组件移动到 non-free-firmware 组件（与 main/contrib/non-free 并列）。
        # 此更改在 2023-01-27 实施，详情请见 https://lists.debian.org/debian-boot/2023/01/msg00235.html
        cat >${armbian_source_file} <<EOF
        deb http://${MIRROR_URL}/debian ${VERSION_CODENAME} main contrib non-free non-free-firmware
        #deb-src http://${MIRROR_URL}/debian ${VERSION_CODENAME} main contrib non-free non-free-firmware

        deb http://${MIRROR_URL}/debian ${VERSION_CODENAME}-updates main contrib non-free non-free-firmware
        #deb-src http://${MIRROR_URL}/debian ${VERSION_CODENAME}-updates main contrib non-free non-free-firmware

        deb http://${MIRROR_URL}/debian ${VERSION_CODENAME}-backports main contrib non-free non-free-firmware
        #deb-src http://${MIRROR_URL}/debian ${VERSION_CODENAME}-backports main contrib non-free non-free-firmware

        deb http://${MIRROR_URL}/debian-security ${VERSION_CODENAME}-security main contrib non-free non-free-firmware
        #deb-src http://${MIRROR_URL}/debian-security ${VERSION_CODENAME}-security main contrib non-free non-free-firmware
EOF
        ;;

    focal | jammy | noble | oracular)
        cat >${armbian_source_file} <<EOF
        deb http://${MIRROR_URL}/ubuntu-ports ${VERSION_CODENAME} main restricted universe multiverse
        #deb-src http://${MIRROR_URL}/ubuntu-ports ${VERSION_CODENAME} main restricted universe multiverse

        deb http://${MIRROR_URL}/ubuntu-ports ${VERSION_CODENAME}-security main restricted universe multiverse
        #deb-src http://${MIRROR_URL}/ubuntu-ports ${VERSION_CODENAME}-security main restricted universe multiverse

        deb http://${MIRROR_URL}/ubuntu-ports ${VERSION_CODENAME}-updates main restricted universe multiverse
        #deb-src http://${MIRROR_URL}/ubuntu-ports ${VERSION_CODENAME}-updates main restricted universe multiverse

        deb http://${MIRROR_URL}/ubuntu-ports ${VERSION_CODENAME}-backports main restricted universe multiverse
        #deb-src http://${MIRROR_URL}/ubuntu-ports ${VERSION_CODENAME}-backports main restricted universe multiverse
EOF
        ;;

    sid | unstable)
        # sid 是永久的非稳定开发版本，无更新或安全支持
        cat >${armbian_source_file} <<EOF
        deb http://${MIRROR_URL}/debian ${VERSION_CODENAME} main contrib non-free non-free-firmware
        #deb-src http://${MIRROR_URL}/debian ${VERSION_CODENAME} main contrib non-free non-free-firmware
EOF
        ;;

    *)
        error_msg "未检测到系统版本: [ ${VERSION_CODENAME} ]"
        ;;

    esac

    # 删除每行开头的空格
    sed -i 's|^[ t]*||g' ${armbian_source_file}
    echo -e "${SUCCESS} 成功更改系统软件源。"
}

# 选择镜像站点
select_mirror_site() {
    source_id="${1}"
    echo -e "${INFO} 您选择的源对应数字: [\033[92m ${source_id} \033[0m]"

    case "${source_id}" in
    0)
        # 恢复默认源
        if [[ -f "${armbian_source_backup_file}" ]]; then
            cp -f "${armbian_source_backup_file}" "${armbian_source_file}"
            echo -e "${SUCCESS} 成功恢复默认源。" && exit 0
        else
            error_msg "默认源文件不存在。"
        fi
        ;;
    1) MIRROR_URL="mirrors.tuna.tsinghua.edu.cn" ;; # 清华大学
    2) MIRROR_URL="mirrors.bfsu.edu.cn" ;;          # 北京外国语大学
    3) MIRROR_URL="mirrors.ustc.edu.cn" ;;          # 中国科学技术大学	
    4) MIRROR_URL="mirrors.aliyun.com" ;;           # 阿里云
    esac

    # 更改软件源列表
    change_source_list
}

# 检查当前软件源
show_current_source() {
    echo -e "${INFO} 当前软件源："
    echo ""
    grep -E "^deb " "${armbian_source_file}" || echo -e "${ERROR} 当前没有配置镜像源。"
    echo ""
}

echo -e "${INFO} 欢迎使用 Armbian 软件源更改脚本。"
echo -e "${INFO} 本脚本用于更改 Armbian 的系统软件源。"
echo -e "${INFO} 请确保网络畅通，并了解修改源可能导致的系统更新问题。"

# 显示当前软件源
show_current_source

# 检查系统版本
check_release
# 备份软件源列表
backup_source_list

# 提示用户输入源对应数字
echo -e "${INFO} 请选择适用于 [\033[92m ${VERSION_CODENAME} \033[0m] 的镜像站点。"
cat <<EOF
           
    0  │  恢复默认软件源        
    1  │  清华大学  
    2  │  北京外国语大学           
    3  │  中国科学技术大学           
    4  │  阿里云 
    5  │  退出 
  
EOF

while true; do
    echo -ne "${OPTIONS} 请输入数字 (0-5): "
    read mwid
    if [[ "${mwid}" =~ ^[0-9]+$ ]] && [[ "${mwid}" -ge 0 && "${mwid}" -le 5 ]]; then
        if [[ "${mwid}" -eq 5 ]]; then
            echo -e "${INFO} 已退出脚本。"
            exit 0
        else
            select_mirror_site "${mwid}"
            break
        fi
    else
        echo -e "${ERROR} 输入无效，请输入有效的数字 (0-5)。"
    fi
done
